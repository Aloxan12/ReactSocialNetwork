{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","pages/ChatPage/ChatPage.tsx"],"names":["_objectDestructuringEmpty","obj","TypeError","Chat","ChatPage","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","Messages","messages","useSelector","state","chat","style","height","overflow","map","m","index","message","Message","src","photo","width","userName","AddMessageForm","useState","setMessage","status","value","onChange","e","currentTarget","disabled","onClick","sendMessage"],"mappings":"2RAAe,SAASA,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gC,mCCgB1BC,GAFEC,UARY,WACvB,OACI,8BACI,cAAC,EAAD,OAOkB,WAC1B,IAAMC,EAAWC,cASjB,OAPAC,qBAAU,WAEN,OADAF,EAASG,eACF,WACHH,EAASI,mBAKb,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,SAICC,EAA0B,SAAC,GAAQ,KAC5C,IAAMC,EAAWC,aAAmD,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,YACxF,OACI,sBAAKI,MAAO,CAACC,OAAQ,QAASC,SAAU,QAAxC,mBACKN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAAC,EAAD,CAAqBC,QAASF,GAAhBC,UAIzCE,EAAkD,SAAC,GAAe,IAAdD,EAAa,EAAbA,QAC7D,OACI,gCACI,qBAAKE,IAAKF,EAAQG,MAAOT,MAAO,CAACU,MAAO,UAD5C,IACuD,4BAAIJ,EAAQK,WAC/D,uBACCL,EAAQA,QACT,2BAICM,EAA+B,SAAC,GAAQ,KACjD,MAA8BC,mBAAS,IAAvC,mBAAOP,EAAP,KAAgBQ,EAAhB,KACMxB,EAAWC,cACXwB,EAASlB,aAA4C,SAAAC,GAAK,OAAIA,EAAMC,KAAKgB,UAa/E,OACI,gCACI,8BACI,0BAAUC,MAAOV,EAASW,SAdrB,SAACC,GACdJ,EAAWI,EAAEC,cAAcH,YAevB,8BACI,wBAAQI,SAAqB,UAAXL,EAAoBM,QAdvB,WAClBf,IAGLhB,EAASgC,YAAYhB,IACrBQ,EAAW,MASH","file":"static/js/5.8034bfe6.chunk.js","sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {ChatMessageType, StatusType} from \"../../api/chat-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../redux/chat-reducer\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage\r\n\r\nexport const Chat: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(startMessagesListening())\r\n        return ()=>{\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    },)\r\n\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </div>\r\n    )\r\n}\r\nexport const Messages: React.FC<{ }> = ({}) => {\r\n    const messages = useSelector<RootReduxStateType, ChatMessageType[]>(state => state.chat.messages)\r\n    return (\r\n        <div style={{height: '400px', overflow: \"auto\"}}>Ñ„\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n        </div>\r\n    )\r\n}\r\nexport const Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n    return (\r\n        <div>\r\n            <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\r\n            <br/>\r\n            {message.message}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\nexport const AddMessageForm: React.FC<{}> = ({}) => {\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<RootReduxStateType, StatusType>(state => state.chat.status)\r\n\r\n    const onChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setMessage(e.currentTarget.value)\r\n    }\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea value={message} onChange={onChange}></textarea>\r\n            </div>\r\n            <div>\r\n                <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}